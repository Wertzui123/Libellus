import graphics
import math.geometry

class Sheet {
    
    [readpublic]
    property string name
    [readpublic]
    property string file
    [readpublic]
    property Size size
    [public]
    property Canvas? canvas
    [public]
    property Canvas? sheetCanvas
    [readpublic]
    property bool loaded
    [public]
    property bool hasChanged

    [public]
    method construct(string name, string file, Size size) {
        this.name = name
        this.file = file
        this.size = size
    }

    [public]
    [static]
    method fromFile(string file) returns Sheet{
        var name = file.reverse().split("/", 2)[0].split(".", 2)[1].reverse()
        var size = new Size(float(graphics.get_image_width_from_file(file)), float(graphics.get_image_height_from_file(file)))
        return new self(name, file, size)
    }

    [public]
    method load(){
        if(!loaded) {
            sheetCanvas = Canvas:fromFile(file)
            var canvasFile = file.reverse().split(".", 2)[1].reverse() + ".canvas.png"
            if(!io.exists_file(canvasFile)) {
                canvas = new Canvas(Canvas(sheetCanvas).width, Canvas(sheetCanvas).height)
                Canvas(canvas).save(canvasFile)
            }
            canvas = Canvas:fromFile(canvasFile)
            loaded = true
        }
    }

    [public]
    method unload(bool save){
        if(loaded) {
            if(save) {
                this.save()
            }
            sheetCanvas = null
            canvas = null
            loaded = false
        }
    }

    [public]
    method save() {
        Canvas(canvas).save(file.reverse().split(".", 2)[1].reverse() + ".canvas.png")
    }

}